@implements IDialogContentComponent<ExerciseSetFormViewModel>

<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

<FluentDialogBody>
    <FluentStack VerticalAlignment="VerticalAlignment.Center" Orientation="Microsoft.FluentUI.AspNetCore.Components.Orientation.Vertical">
        @if (Content.Exercise.ExerciseLogType == ExerciseLogType.NegativeWeight ||
        Content.Exercise.ExerciseLogType == ExerciseLogType.Weight)
        {
            <CustomNumberField @bind-Value="@Content.CreateDto.Reps" Label="Reps" />
            <FluentValidationMessage For="() => Content.CreateDto.Reps" />
            
            <CustomNumberField @bind-Value="@Content.CreateDto.Weight" Label="Weight (kg)" />
            <FluentValidationMessage For="() => Content.CreateDto.Weight" />
        }
        else if (Content.Exercise.ExerciseLogType == ExerciseLogType.Time)
        {
            <CustomNumberField @bind-Value="@Content.CreateDto.Time" Label="Time (s)" />
            <FluentValidationMessage For="() => Content.CreateDto.Time" />
        }
        else
        {
            <p>Ups, something went wrong</p>
        }
        <FluentTextField Style="width:100%"
                         @bind-Value=Content.CreateDto.Note
                         Label="Note" />
    </FluentStack>
</FluentDialogBody>

<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>
