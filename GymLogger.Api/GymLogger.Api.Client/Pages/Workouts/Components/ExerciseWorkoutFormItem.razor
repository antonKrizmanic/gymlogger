@inherits BaseComponent
<FluentCard>
    <FluentStack Orientation="Microsoft.FluentUI.AspNetCore.Components.Orientation.Horizontal" Style="justify-content:space-between">
    <FluentLabel Typo="Typography.PaneHeader">@Item.Index<span>.</span> @Item.Exercise.Name</FluentLabel>
    @if (Item.Exercise != null)
    {
        <div style="min-width:68px;">
            <FluentButton OnClick="@(async() => await OnAddSet.InvokeAsync(Item.Exercise.Id))" IconEnd="@(new Icons.Filled.Size16.Add())" />
            <FluentButton OnClick="@(async() => await OnRemoveExercise.InvokeAsync(Item.Exercise.Id))" IconEnd="@(new Icons.Filled.Size16.Delete())" />
        </div>
    }
</FluentStack>
@if(lastExerciseWorkout != null)
{
    <FluentAccordion Style="margin-top:8px;">
        <FluentAccordionItem Heading="Last">            
            <ExerciseWorkoutItem Exercise="lastExerciseWorkout" ShowName="false"/>
        </FluentAccordionItem>
    </FluentAccordion>
}
<FluentLabel Typo="Typography.Body">@Item.Exercise.Description</FluentLabel>
<FluentLabel Typo="Typography.Body">@Item.Note</FluentLabel>
@if (Item.Sets != null && Item.Sets.Any())
{
    <ExerciseSetFormTable Sets="@Item.Sets"
                          Exercise="@Item.Exercise"
                          OnCopySet="@OnCopySet"
                          OnEditSet="@OnEditSet"
                          OnRemoveSet="@OnRemoveSet" />
}
</FluentCard>