<FluentButton IconEnd="@(new Icons.Regular.Size16.ArrowSort())" id="sortMenu" @onclick="@(() => sortMenuOpen = !sortMenuOpen)">
    Sortiranje
</FluentButton>
<FluentMenu Anchor="sortMenu" @bind-Open="sortMenuOpen" VerticalThreshold="170">
    <FluentMenuItem OnClick="@((e) => OnSortMenuItemClickedAsync(nameof(WorkoutDto.Name), Common.Enums.SortDirection.Ascending))">
        Name (ascending)
    </FluentMenuItem>
    <FluentMenuItem OnClick="@((e) => OnSortMenuItemClickedAsync(nameof(WorkoutDto.Name), Common.Enums.SortDirection.Descending))">
        Name (descending)
    </FluentMenuItem>
    <FluentMenuItem OnClick="@((e) => OnSortMenuItemClickedAsync(nameof(WorkoutDto.MuscleGroupName), Common.Enums.SortDirection.Ascending))">
        Muscle group (ascending)
    </FluentMenuItem>
    <FluentMenuItem OnClick="@((e) => OnSortMenuItemClickedAsync(nameof(WorkoutDto.MuscleGroupName), Common.Enums.SortDirection.Descending))">
        Muscle group (descending)
    </FluentMenuItem>
    <FluentMenuItem OnClick="@((e) => OnSortMenuItemClickedAsync(nameof(WorkoutDto.Date), Common.Enums.SortDirection.Ascending))">
        Date (ascending)
    </FluentMenuItem>
    <FluentMenuItem OnClick="@((e) => OnSortMenuItemClickedAsync(nameof(WorkoutDto.Date), Common.Enums.SortDirection.Descending))">
        Date (descending)
    </FluentMenuItem>
</FluentMenu>

@code {
    [Parameter] public EventCallback<SortEventArgs> OnSortChange { get; set; }
    private bool sortMenuOpen = false;

    private async Task OnSortMenuItemClickedAsync(string sortField, Common.Enums.SortDirection sortDirection)
    {
        await this.OnSortChange.InvokeAsync(new(sortField, sortDirection));
    }
}
