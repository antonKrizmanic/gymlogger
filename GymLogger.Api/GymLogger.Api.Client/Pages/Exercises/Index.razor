@page "/Exercises"
@inherits BaseComponent
@attribute [Authorize]
@rendermode @(new InteractiveAutoRenderMode(prerender: false))

<FluentStack Orientation="Orientation.Vertical">
    <PageHeading>
        <ChildContent>
            Vježbe
        </ChildContent>
        <PageHeadingButtons>
            <FluentButton OnClick="@(() => CreateAsync())" IconEnd="@(new Icons.Regular.Size16.Add())">
                Dodaj novu vježbu
            </FluentButton>
            
            <FluentButton IconEnd="@(new Icons.Regular.Size16.Filter())" OnClick="@(() => filterOpen = !filterOpen)">
                Filtriraj
            </FluentButton>
            <ExerciseSortMenu
                OnSortChange="OnSortMenuItemClicked"/>
        </PageHeadingButtons>
    </PageHeading>
    @if(filterOpen)
    {
        <FluentCard AreaRestricted="false">
            <FluentStack Orientation="Orientation.Horizontal" Wrap="true">                
                <FluentStack Orientation="Orientation.Vertical" Style="width:auto">                    
                    <FluentSelect @bind-Value="@SelectedMuscleGroupId"
                                  Label="Grupa mišića"                                  
                                  Items="@MuscleGroups"
                                  Style="width:100%;"
                                  TOption="MuscleGroupDto"
                                  OptionValue="@((item) => item.Id.ToString())"
                                  OptionText="@((item) => item.Name)">
                    </FluentSelect>                    
                </FluentStack>
                <FluentStack Orientation="Orientation.Vertical" Style="width:auto">
                    <FluentSelect 
                        @bind-Value="@SelectedExerciseLogType" 
                        Label="Način zapisivanja"
                                  Style="width:100%;"
                        TOption="ExerciseLogType">
                        @foreach (var logType in Enum.GetValues<ExerciseLogType>())
                        {
                            var enumDisplay = EnumHelper<ExerciseLogType>.GetDisplayValue(logType);
                            <FluentOption Value="@logType.ToString()">@enumDisplay</FluentOption>
                        }
                    </FluentSelect>                    
                </FluentStack>                
            </FluentStack>
            <FluentStack HorizontalAlignment="HorizontalAlignment.Start" Style="margin-top: 1rem;">
                <FluentButton Appearance="Appearance.Accent" OnClick="@(() => FilterAsync())">Filtriraj</FluentButton>
                <FluentButton OnClick="@ClearFilter">Očisti</FluentButton>
            </FluentStack>
        </FluentCard>
    }    

    <GlCardGrid 
        TItem="ExerciseDto"
        PagedResponse="_pagedResponseDto"
        PagedRequest="_pagedRequestDto"
        PagedRequestChanged="LoadDataAsync"
        OnDetailsClicked="Details"
        OnEditClicked="EditAsync"
        OnDeleteClicked="DeleteAsync">
        <ItemTemplate>                
            <FluentLabel Typo="Typography.PaneHeader">@context.Name</FluentLabel>
            <FluentLabel Typo="Typography.Body"><b>Mišićna grupa:</b> @context.MuscleGroupName</FluentLabel>
            @{
                var desc = EnumHelper<ExerciseLogType>.GetDisplayValue(context.ExerciseLogType);
            }
            <FluentLabel Typo="Typography.Body"><b>Način zapisivanja:</b> @desc</FluentLabel>
            <FluentLabel Typo="Typography.Body"><b>Opis:</b> @context.Description</FluentLabel>                           
        </ItemTemplate>
    </GlCardGrid>
</FluentStack>