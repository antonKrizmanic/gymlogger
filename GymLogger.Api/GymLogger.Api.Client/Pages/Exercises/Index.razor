@page "/Exercises"
@inherits BaseComponent
@attribute [Authorize]

<PageTitle>GymLogger - Exercise</PageTitle>

<FluentStack Orientation="Microsoft.FluentUI.AspNetCore.Components.Orientation.Vertical">
    <PageHeading>
        <ChildContent>
            Exercise
        </ChildContent>
        <PageHeadingButtons>
            <FluentButton OnClick="@(() => CreateAsync())" IconEnd="@(new Icons.Regular.Size16.Add())">
                Add
            </FluentButton>
            
            <FluentButton IconEnd="@(new Icons.Regular.Size16.Filter())" OnClick="@(() => filterOpen = !filterOpen)">
                Filter
            </FluentButton>
            <ExerciseSortMenu
                OnSortChange="OnSortMenuItemClicked"/>
        </PageHeadingButtons>
    </PageHeading>
    @if(filterOpen)
    {
        <ExerciseFilter 
            MuscleGroups="@MuscleGroups"
            PagedRequestDto="@PagedRequestDto" 
            OnFilter="@FilterAsync" />
    }    

    <GlCardGrid 
        TItem="ExerciseDto"
        PagedResponse="_pagedResponseDto"
        PagedRequest="PagedRequestDto"
        PagedRequestChanged="LoadDataAsync"
        ShowActionButtons="false">
        <ItemTemplate>                
            <FluentLabel Typo="Typography.PaneHeader">@context.Name</FluentLabel>
            <FluentLabel Typo="Typography.Body"><b>Muslce group:</b> @context.MuscleGroupName</FluentLabel>
            @{
                var desc = EnumHelper<ExerciseLogType>.GetDisplayValue(context.ExerciseLogType);
            }
            <FluentLabel Typo="Typography.Body"><b>Log type:</b> @desc</FluentLabel>
            <FluentLabel Typo="Typography.Body"><b>Description:</b> @context.Description</FluentLabel>                           

            <FluentStack HorizontalAlignment="HorizontalAlignment.End">
                        <FluentButton OnClick="@(() => Details(context))"
                                      IconEnd="@(new Icons.Regular.Size16.Search())" />
            @if (!context.IsPublic)
            {                
                <FluentButton OnClick="@(() => EditAsync(context))"
                                IconEnd="@(new Icons.Regular.Size16.Edit())" />
                <FluentButton OnClick="@(() => DeleteAsync(context))"
                                IconEnd="@(new Icons.Regular.Size16.Delete())" />                
            }
            </FluentStack>
        </ItemTemplate>
    </GlCardGrid>
</FluentStack>