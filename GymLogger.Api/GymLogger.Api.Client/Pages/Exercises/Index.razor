@page "/Exercises"
@inherits BaseComponent
@attribute [Authorize]
@rendermode @(new InteractiveAutoRenderMode())

<FluentStack Orientation="Orientation.Vertical">
    <PageHeading>
        <ChildContent>
            Vježbe
        </ChildContent>
        <PageHeadingButtons>
            <FluentButton OnClick="@(() => CreateAsync())" IconEnd="@(new Icons.Regular.Size16.Add())">
                Dodaj novu vježbu
            </FluentButton>
        </PageHeadingButtons>
    </PageHeading>
    <FluentSearch @bind-Value="_searchValue"
                  @bind-Value:after="OnSearchAsync"
                  Immediate="true"
                  ImmediateDelay="300"
                  Placeholder="Pretraži vježbe" />

    <FluentGrid Style="width:100%;">
        @foreach (var item in items)
        {
            <FluentGridItem xs="12" sm="6" md="4" lg="3" xl="3" xxl="2">
                <FluentCard MinimalStyle="false">
                    <FluentStack Orientation="Orientation.Vertical">
                        <FluentLabel Typo="Typography.PaneHeader">@item.Name</FluentLabel>
                        <FluentLabel Typo="Typography.Body"><b>Mišićna grupa:</b> @item.MuscleGroupName</FluentLabel>
                        @{
                            var desc = EnumHelper<ExerciseLogType>.GetDisplayValue(item.ExerciseLogType);
                        }
                        <FluentLabel Typo="Typography.Body"><b>Način zapisivanja:</b> @desc</FluentLabel>
                        <FluentLabel Typo="Typography.Body"><b>Opis:</b> @item.Description</FluentLabel>
                        @{
                            var editHref = $"/Exercises/Edit/{item.Id}";
                            var detailHref = $"/Exercises/{item.Id}";
                        }
                        <FluentStack HorizontalAlignment="HorizontalAlignment.End">
                            <FluentAnchor Href="@detailHref" IconEnd="@(new Icons.Regular.Size16.Search())" />
                            <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())" OnClick="@(() => EditAsync(item))"/>
                            <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => DeleteAsync(item.Id))" />
                        </FluentStack>
                    </FluentStack>
                </FluentCard>
            </FluentGridItem>            
        }
    </FluentGrid>
    <FluentSelect 
        TOption="string"
        Value="10" 
        @onchange="HandlePageSizeChangeAsync">
            <FluentOption Value="10">10</FluentOption>
            <FluentOption Value="20">20</FluentOption>
            <FluentOption Value="50">50</FluentOption>
            <FluentOption Value="100">100</FluentOption>
    </FluentSelect>

    <FluentPaginator 
        State="_paginationState"    
        CurrentPageIndexChanged="@HandlePageChangedAsync" />
</FluentStack>